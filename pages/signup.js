import React, { useState } from "react";
import Link from "next/link";
import Head from "next/head";
import Image from "next/image";
import { BsEye, BsEyeSlash } from "react-icons/bs";
import validator from "validator";
import logo from "../public/assets/Logo.png";


const Signup = () => {
  const [progressTrack, setProgressTrack] = useState(0);
  const [firstName, setFirstName] = useState("");
  const [lastName, setLastName] = useState("");
  const [email, setEmail] = useState("");
  const [phoneNumber, setPhoneNumber] = useState("");
  const [confirmEmail, setConfirmEmail] = useState("");
  const [issubmission, setIsSubmission] = useState(false);
  const [password, setPassword] = useState("");
  const [confirmPassword, setConfirmPassword] = useState("");
  const [isFirstNameValidated, setisFirstNameValidated] = useState(true);
  const [isLastNameValidated, setisLastNameValidated] = useState(false);
  const [isEmailPattern, setisEmailPattern] = useState(true);
  const [isConfirmEmailValidated, setisConfirmEmailValidated] = useState(true);
  const [isPasswordValidated, setIsPasswordValidated] = useState(false);
  const [isConfirmPasswordValidated, setIsConfirmPasswordValidated] =
    useState(false);
  const [eyePasswordCheck, setEyePasswordCheck] = useState(true);

  const handleSubmit = (e) => {
    e.preventDefault();
    console.log("i got here");
    setIsSubmission(true);
  };

  // const validateFirstName = (fname) => {
  //   if (fname.length < 3) {
  //     setisFirstNameShort(true);
  //     return
  //   }
  //   setFirstName(fname);
  //   setisFirstNameShort(false);
  // };
  const validatePasswordByMe = (pwd) => {
    return /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*(\W|_)).{5,}$/.test(pwd)
      ? true
      : false;
  };

  const validateFirstName = (fname) => {
    const isFirstNameValidated = validator.isLength(fname, {
      min: 3,
      max: undefined,
    });
    console.log(isFirstNameValidated);
    setFirstName(fname);
    isFirstNameValidated
      ? setisFirstNameValidated(true)
      : setisFirstNameValidated(false);
  };

  const validateLastName = (lname) => {
    const LastNameValidation = validator.isLength(lname, {
      min: 3,
      max: undefined 
    });
    console.log(LastNameValidation);
    setLastName(lname);
    LastNameValidation
      ? setisLastNameValidated(true)
      : setisLastNameValidated(false);
  };

  const validateEmail = (email) => {
    const isEmailValidated = validator.isEmail(email);
    console.log(isEmailValidated);
    setEmail(email);
    isEmailValidated ? setisEmailPattern(true) : setisEmailPattern(false);
  };

  const validateConfirmEmail = (ConfirmEmail) => {
    const isConfirmEmailValidated = validator.isEmail(ConfirmEmail);
    console.log(isConfirmEmailValidated);
    setConfirmEmail(ConfirmEmail);
    isConfirmEmailValidated
      ? setisConfirmEmailValidated(true)
      : setisConfirmEmailValidated(false);
  };

  const validatePassword = (pass) => {
    const passwordValidation = validatePasswordByMe(pass);
    console.log(pass);

    if (passwordValidation) {
      setIsPasswordValidated(false);
    } else {
      setIsPasswordValidated(true);
    }

    setPassword(pass);

    if (password === confirmPassword) {
      setIsConfirmPasswordValidated(false);
    } else {
      setIsConfirmPasswordValidated(true);
    }
  };

  const validateConfirmPassword = (confpassword) => {
    console.log(password, confpassword);
    if (confpassword === password) {
      setIsConfirmPasswordValidated(false);
    } else {
      setIsConfirmPasswordValidated(true);
    }

    setConfirmPassword(confpassword);
  };
  return (
    <div>
      <Head>
        <title>Asset Tracker | Meristem Trustees</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex">
        <div className="bg-[#BBF1D1] w-1/2 h-[69.5rem] sm:hidden md:w-1/2 md:h-[69.2rem] ">
          <div className="mt-[4rem] w-[15rem] ml-[6.2rem] mb-[7rem] md:block md:mt-[2rem] md:w-[13.8rem] md:ml-[4rem] md:h-[34.33px]  ">
            <Image src={logo} alt="MeristemLogo" />
          </div>

          <div className="font-Poppins font-normal w-[45rem] ml-[6.2rem] mb-[5.3rem] md:mb-[13.3rem] md:block md:w-[20rem] md:ml-[4rem]">
            <h1 className=" w-[45rem] h-[20rem] text-[4.8rem] mb-[1.7rem] text-[#345C45] md:w-[31rem] md:h-[14.3rem] md:text-[3.5rem] ">
              Keep track of all your assets on a single dashboard
            </h1>

            <p className="w-[41.4rem] h-[7.2rem] text-[1.6rem] sm:hidden md:w-[31rem] md:h-[7.2rem] md:text-[1.3rem]">
              Sign up now to easily keep track of your assets, designated
              beneficiaries and receive estate planning products tailored to
              your assets.
            </p>
          </div>

          <div className="flex justify-between place-items-end ">
            <div className=" bg-[#345C45] w-[13rem] md:w-[8rem] rounded-tr-3xl h-[8rem] "></div>
            <div className="bg-[#345C45] w-[15rem] md:w-[10rem] rounded-tr-3xl rounded-tl-3xl h-[13rem]"></div>
            <div className="bg-[#345C45] w-[18rem] md:w-[11rem] rounded-tl-3xl h-[20rem]"></div>
          </div>
        </div>

        <div className="flex justify-center px-[3rem] bg-white w-1/2 h-[69.5rem] md:block md:w-1/2 md:h-[69.4rem] ">
          <div className="w-[10rem] h-[2rem] hidden sm:block sm:mt-7">
            <Image src={logo} alt="MeristemLogo" />
          </div>

          <div className="font-Poppins w-[42rem] h-[55rem] mt-[10rem] sm:w-[20rem] sm:mt-[7rem] md:w-[35rem] md:h-[52rem] md:mt-[6rem] ">
            <h2 className="mb-6 text-[3.2rem] sm:text-[3.2rem] md:text-[3.2rem] text-[#345C45] ">
              Sign Up
            </h2>
            <div className="flex mb-10 w-[32.1rem] h-[2.4rem]">
              <p className="text-[1.6rem]">Already have an account?</p>
              <span className="ml-3 w-[5.7rem] h-[2.4rem] text-[#345C45] text-[1.8rem] ">
                <b>
                  <Link href="#">Log in</Link>
                </b>
              </span>
            </div>

            <form
              onSubmit={handleSubmit}
              className="flex sm:w-[28rem] md:w-[33.8rem] "
            >
              {progressTrack === 0 ? (
                <div id="SignUp" className="mb-5 w-[39rem] ">
                  <label className="text-[1.4rem] w-[7.5rem] mb-2">
                    First Name
                  </label>
                  <br />
                  <span>
                    {isFirstNameValidated ? (
                      ""
                    ) : (
                      <span className=" text-[red]">
                        This is a required field with at least 3 character
                      </span>
                    )}
                  </span>
                  <div className=" w-[37.1rem] h-[4.8rem] mb-[1.6rem] sm:w-[33rem] md:w-[37.1rem]">
                    <input
                      onChange={(e) => validateFirstName(e.target.value.trim())}
                      onBlur={(e) => validateFirstName(e.target.value.trim())}
                      type="text"
                      id="fname"
                      name="firstName"
                      defaultValue={(e) => e.target.value}
                      className="bg-[#F3F3F3] w-[37.1rem] h-[4.8rem] p-2 text-[1.4rem] rounded-lg sm:w-[28rem] sm:h-[4.4rem] sm:text-[1.2rem] sm:rounded-lg md:w-[31rem] md:h-[4.4rem] md:text-[1.4rem] md:rounded-lg  "
                      placeholder="firstName"
                      style={{ border: "none", outline: "none" }}
                      required
                    />
                  </div>

                  <label className="text-[1.4rem] w-[95px]">Last Name</label>
                  <br />
                  <span>
                    {isLastNameValidated ? (
                      <span className=" text-[red]">
                        This is a required field with at least 3 character
                      </span>
                    ) : (
                      ""
                    )}
                  </span>
                  <div className=" w-[37.1rem] h-[4.8rem] mb-[1.6rem] sm:w-[33rem] md:w-[37.1rem]">
                    <input
                      onChange={(e) => validateLastName(e.target.value.trim())}
                      onBlur={(e) => validateLastName(e.target.value.trim())}
                      type="text"
                      id="lname"
                      name="lastName"
                      className="bg-[#F3F3F3] w-[37.1rem] h-[4.8rem] p-2 text-[1.4rem] rounded-lg sm:w-[28rem] sm:h-[4.4rem] sm:text-[1.2rem] sm:rounded-lg md:w-[31rem] md:h-[4.4rem] md:text-[1.4rem] md:rounded-lg  "
                      placeholder="lastName"
                      style={{ border: "none", outline: "none" }}
                      required
                    />
                  </div>

                  <label className="text-[1.4rem] w-[95px] ">Email</label>
                  <br />
                  <span>
                    {isEmailPattern ? (
                      ""
                    ) : (
                      <span className="text-[red]">
                        Invalid Email.Please match the email pattern
                      </span>
                    )}
                  </span>
                  <div className=" w-[37.1rem] h-[4.8rem] mb-[1.6rem] sm:w-[33rem] md:w-[37.1rem]">
                    <input
                      onChange={(e) => validateEmail(e.target.value.trim())}
                      type="email"
                      id="Email"
                      name="email"
                      className="bg-[#F3F3F3] w-[37.1rem] h-[4.8rem] p-2 text-[1.4rem] rounded-lg sm:w-[28rem] sm:h-[4.4rem] sm:text-[1.2rem] sm:rounded-lg md:w-[31rem] md:h-[4.4rem] md:text-[1.4rem] md:rounded-lg  "
                      placeholder="Faruq@gmail.com"
                      style={{ border: "none", outline: "none" }}
                      required
                    />
                  </div>

                  <label className="text-[1.4rem] w-[95px]">Phone Number</label>
                  <br />
                  <div className=" w-[37.1rem] h-[4.8rem] mb-[1.6rem] sm:w-[33rem] md:w-[37.1rem]">
                    <div className="flex">
                      <select
                        name="format"
                        id="Num-format"
                        className="bg-[#F3F3F3] h-[48px] text-[1.4rem] md:h-[4.4rem] rounded-bl-xl rounded-tl-xl border"
                        style={{ border: "none", outline: "none" }}
                      >
                        <option value="+234">+234</option>
                        <option value="+1">+1</option>
                        <option value="+997">+997</option>
                        <option value="+01">+01</option>
                        <option value="+233">+233</option>
                        <option value="+910">+910</option>
                      </select>
                      <input
                        onChange={(e) => setPhoneNumber(e.target.value)}
                        id="phone"
                        type="tel"
                        name="phone"
                        className="bg-[#F3F3F3] text-[1.4rem] w-[32rem] h-[4.8rem] sm:w-[22.5rem] sm:h-[4.4rem] sm:text-[1.3rem] p-2 md:text-[1.4rem] md:w-[25.5rem] md:h-[4.4rem] rounded-br-xl rounded-tr-xl"
                        placeholder="+234810910xxx"
                        style={{ border: "none", outline: "none" }}
                        required
                      />
                    </div>
                  </div>

                  <button
                    type="button"
                    onClick={() => setProgressTrack(1)}
                    className="bg-[#345C45] w-[37.1rem] h-[4.8rem] mt-7 text-[1.8rem] text-center sm:w-[28rem] sm:h-[48px] md:w-[31rem] md:h-[4.8rem] rounded-md"
                    style={{ color: "white" }}
                  >
                    Next
                  </button>
                </div>
              ) : progressTrack === 1 ? (
                <div id="ConfirmEmail" className="w-[40.1rem] md:w-[33rem] sm:w-[30rem]">
                  <label className="text-[1.4rem] w-[95px]">
                    Confirm Email{" "}
                  </label>
                  <br />
                  <span>
                    {isConfirmEmailValidated ? (
                      ""
                    ) : (
                      <span className="text-[red]">
                        Invalid Email.Please match the email pattern
                      </span>
                    )}
                  </span>
                  <div className="w-[37rem] h-[4.8rem] mb-[3.6rem] sm:w-[29rem] md:w-[32rem]">
                    <input
                      onChange={(e) =>
                        validateConfirmEmail(e.target.value.trim())
                      }
                      type="email"
                      id="confirmEmail"
                      name="ConfirmEmail"
                      className="bg-[#F3F3F3] w-[37.1rem] h-[4.8rem] p-2 text-[1.4rem] rounded-lg sm:w-[28rem] sm:h-[4.4rem] sm:text-[1.2rem] sm:rounded-lg md:w-[31rem] md:h-[4.4rem] md:text-[1.4rem] md:rounded-lg  "
                      placeholder="faruq@gmail.com"
                      style={{ border: "none", outline: "none" }}
                    />
                  </div>

                  <div className="flex justify-between w-[37rem] mt-7 mb-7 sm:w-[28rem] md:w-[31rem] ">
                    <button
                      onClick={() => setProgressTrack(0)}
                      type="button"
                      className="bg-tranparent text-[#345C45] text-[1.8rem] w-[14rem] h-[4rem] sm:w-[8rem] sm:h-[3rem] sm:text-[1.3rem] md:w-[10rem] md:h-[3.5rem] md:text-[1.5rem] border border-[#345C45] rounded-md"
                    >
                      Back
                    </button>
                    <button
                      onClick={() => setProgressTrack(2)}
                      type="button"
                      className="bg-[#345C45] w-[14rem] h-[40px] text-[1.8rem] md:w-[10rem] md:h-[35px] rounded-md"
                      style={{ color: "white" }}
                    >
                      Next
                    </button>
                  </div>
                </div>
              ) : progressTrack === 2 ? (
                <div id="ConfirmEmail" className="md:w-[34rem]">
                  <label className="text-[1.4rem] w-[95px]">Password</label>
                  <br />
                  <span>
                    {isPasswordValidated ? (
                      <span className=" text-[red]">
                        A minimum 8 characters password contains a combination
                        of uppercase and lowercase letter and number are
                        required.
                      </span>
                    ) : (
                      ""
                    )}
                  </span>
                  <div className="flex bg-[#F3F3F3] w-[37rem] h-[4.8rem] mb-[1.6rem] sm:w-[31rem] sm:h-[4.3rem] md:w-[33rem] md:h-[4.8rem]">
                    <input
                      onChange={(e) => validatePassword(e.target.value.trim())}
                      type={eyePasswordCheck ? "password" : "text"}
                      id="password"
                      name="password"
                      className="bg-[#F3F3F3] w-[33rem] h-[4.8rem] p-2 text-[1.4rem] rounded-lg sm:w-[28rem] sm:h-[4.4rem] sm:text-[1.2rem] sm:rounded-lg md:w-[31rem] md:h-[4.4rem] md:text-[1.4rem] md:rounded-lg  "
                      placeholder="**********"
                      style={{ border: "none", outline: "none" }}
                    />
                    <span
                      id="toggle"
                      onClick={() => {
                        setEyePasswordCheck((prev) => !prev);
                      }}
                      className="bg-[#F3F3F3] mt-5"
                    >
                      {password ? (
                        <BsEyeSlash style={{ width: "40px", height: "20px" }} />
                      ) : (
                        <BsEye style={{ width: "40px", height: "20px" }} />
                      )}
                    </span>
                  </div>

                  <label className="text-[1.4rem] w-[95px]">
                    Confirm Password
                  </label>
                  <br />
                  <span>
                    {isConfirmPasswordValidated ? (
                      <span className=" text-[red]">Password mismatch !</span>
                    ) : (
                      ""
                    )}
                  </span>
                  <div className="flex bg-[#F3F3F3] w-[37rem] h-[4.8rem] mb-[1.6rem] sm:w-[31rem] sm:h-[4.3rem] md:w-[33rem] md:h-[4.8rem]">
                    <input
                      onChange={(e) =>
                        validateConfirmPassword(e.target.value.trim())
                      }
                      onBlur={(e) =>
                        validateConfirmPassword(e.target.value.trim())
                      }
                      type={confirmPassword ? "password" : "text"}
                      id="confirmPassword"
                      name="confirmPassword"
                      className="bg-[#F3F3F3] w-[33rem] h-[4.8rem] p-2 text-[1.4rem] rounded-lg sm:w-[28rem] sm:h-[4.4rem] sm:rounded-lg md:w-[31rem] md:h-[4.4rem] md:rounded-lg  "
                      placeholder="**********"
                      style={{ border: "none", outline: "none" }}
                    />

                    <div
                      id="toggle"
                      onClick={() => {
                        setConfirmPassword(!confirmPassword);
                      }}
                      className="bg-[#F3F3F3] mt-5"
                    >
                      {confirmPassword ? (
                        <BsEyeSlash
                          className="passwordRevealed "
                          style={{ width: "40px", height: "20px" }}
                        />
                      ) : (
                        <BsEye
                          className="passwordRevealed"
                          style={{ width: "40px", height: "20px" }}
                        />
                      )}
                    </div>
                  </div>

                  <div className="flex justify-between w-[37rem] mt-7 mb-7 sm:w-[28rem] md:w-[33rem] ">
                    <button
                      onClick={() => setProgressTrack(1)}
                      className="bg-tranparent text-[#345C45] text-[1.8rem] w-[14rem] h-[4rem] sm:w-[8rem] sm:h-[3rem] sm:text-[1.3rem] md:w-[10rem] md:h-[3.5rem] md:text-[1.5rem] border border-[#345C45] rounded-md"
                    >
                      Back
                    </button>
                    <button
                      className="bg-[#345C45] w-[14rem] h-[40px] text-[1.8rem] md:w-[10rem] md:h-[35px] rounded-md"
                      type="submit"
                      style={{ color: "white" }}
                    >
                      Sign Up
                    </button>
                  </div>

                  <div className="w-[36.6rem] sm:w-[30rem] md:w-[34rem] ">
                    <div className="flex">
                      <input
                        id="checkbox"
                        type="checkbox"
                        className="w-[2rem] sm:w-[1rem] md:w-[1.5rem] border border-[#345C45]"
                      />
                      <h6 className="ml-3 text-[1.3rem] sm:text-[1rem] md:text-[1.2rem]">
                        I agree to the Terms & Condition and Privacy Policy
                      </h6>
                    </div>
                  </div>
                </div>
              ) : null}
            </form>
          </div>
        </div>
      </main>
    </div>
  );
};
module.exports = Signup;
